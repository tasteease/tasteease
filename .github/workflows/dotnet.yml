# This workflow will build a .NET project
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-net

name: Analysis and Deployment

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  build:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest]
        dotnet-version: [7.0.x]

    steps:
    - uses: actions/checkout@v4
    - name: Setup .NET
      uses: actions/setup-dotnet@v4
      with:
        dotnet-version: ${{ matrix.dotnet-version }}
        fetch-depth: 0 # Shallow clones should be disabled for a better relevancy of analysis
    - name: Restore dependencies
      run: dotnet restore
    - name: Build
      run: dotnet build --no-restore

    outputs:
      os: ${{ matrix.os }}

  test-linux:
    needs: build
    runs-on: ubuntu-latest

    steps:
    - name: Testing in linux environment
      run: dotnet test --no-build --verbosity normal

  test-windows:
    needs: build
    runs-on: windows-latest

    steps:
    - name: Testing in windows environment
      run: dotnet test --no-build --verbosity normal
  
  sonarqube:
    needs: [test-linux, test-windows]
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    - name: SonarQube Scan
      uses: sonarsource/sonarqube-scan-action@master
      env:
        SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        SONAR_HOST_URL: ${{ secrets.SONAR_HOST_URL }}

  homologation:
    needs: [sonarqube]
    runs-on: ubuntu-latest

    steps:
    - name: Deploy to Homologation
      run: echo "Deploying to Homologation"
      # Add your deployment steps here
